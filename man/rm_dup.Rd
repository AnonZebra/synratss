% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rm_dup.R
\name{rm_dup}
\alias{rm_dup}
\title{Remove duplicates from a data frame}
\usage{
rm_dup(df, ind_col, keep_last = FALSE)
}
\arguments{
\item{df}{data frame}

\item{ind_col}{character value giving the name of the column
to be searched for duplicate entries}

\item{keep_last}{logical value indicating if the last, instead
of the first, of each set of duplicates should be retained. defaults
to FALSE, i.e. to retaining the first of each set of duplicates.}

\item{rm_na}{logical value. if set to TRUE, rows with NA in the
specified column are removed.}
}
\description{
\code{rm_dup()} finds all rows in a data frame which share the same
entry for a target column and returns a data frame where only the first
or last of each set of duplicates is retained.
}
\details{
\code{rm_dup} finds all rows in a data frame which share the same
entry for a target column and returns a data frame where. Then for each set of
duplicates, in a first step, the row with the most non-missing/non-NA values
is retained. In a second step, if there are duplicate rows where more than one row
has non-NA values for all columns, either the first (keep_last=FALSE) or the last
(keep_last=TRUE) row in the set of duplicates is kept. Rows with NA entries in the
target column are left as they are (even if there are multiple NA's). If no duplicates
are found, the data frame is returned as-is.
}
\examples{
df <- data.frame(x = c(1, 3, 1, 1, 5, 8, 5, 9, 10, NA),
y = c(3, 1, 4, 8, 10, 8, 9, 10, 11, 5))
rm_dup(df, "x")

}
\seealso{
\code{\link[base]{order}}
}
